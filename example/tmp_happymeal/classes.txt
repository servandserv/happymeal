

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/XML/Atom/Link.php
<?php
	namespace com\servandserv\XML\Atom;
		
	class Link extends \com\servandserv\happymeal\XML\Schema\AnyComplexType {
			
		const NS = "urn:com:servandserv:XML:Atom:Link";
		const ROOT = "Link";
		const PREF = NULL;
		/**
		 * @maxOccurs 1 
		 * @minOccurs 1 
		 * @var \String
		 */
		protected $Rel = null;
		/**
		 * @maxOccurs 1 
		 * @minOccurs 1 
		 * @var \String
		 */
		protected $Href = null;
		/**
		 * @maxOccurs 1 
		 * @minOccurs 0 
		 * @var \String
		 */
		protected $Type = null;
		/**
		 * @maxOccurs 1 
		 * @minOccurs 0 
		 * @var \String
		 */
		protected $Method = null;
		public function __construct() {
			parent::__construct();
			$this->__props["c4ca4238a0b923820dcc509a6f75849b"] = array(
			    "attribute"=>false,
			    "nodeName"=>"rel",
			    "class"=>"",
			    "classNS"=>"com\servandserv\XML\Atom\Link",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\String",
				"prop"=>"Rel",
				"getter"=>"getRel",
				"setter"=>"setRel",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:XML:Atom:Link",
				"array"=>"",
				"minOccurs"=>1
			);
			$this->__props["c81e728d9d4c2f636f067f89cc14862c"] = array(
			    "attribute"=>false,
			    "nodeName"=>"href",
			    "class"=>"",
			    "classNS"=>"com\servandserv\XML\Atom\Link",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\String",
				"prop"=>"Href",
				"getter"=>"getHref",
				"setter"=>"setHref",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:XML:Atom:Link",
				"array"=>"",
				"minOccurs"=>1
			);
			$this->__props["eccbc87e4b5ce2fe28308fd9f2a7baf3"] = array(
			    "attribute"=>false,
			    "nodeName"=>"type",
			    "class"=>"",
			    "classNS"=>"com\servandserv\XML\Atom\Link",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\String",
				"prop"=>"Type",
				"getter"=>"getType",
				"setter"=>"setType",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:XML:Atom:Link",
				"array"=>"",
				"minOccurs"=>0
			);
			$this->__props["a87ff679a2f3e71d9181a67b7542122c"] = array(
			    "attribute"=>false,
			    "nodeName"=>"method",
			    "class"=>"",
			    "classNS"=>"com\servandserv\XML\Atom\Link",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\String",
				"prop"=>"Method",
				"getter"=>"getMethod",
				"setter"=>"setMethod",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:XML:Atom:Link",
				"array"=>"",
				"minOccurs"=>0
			);
		}
		/**
		 * @param \String $val
		 */
		public function setRel (  $val ) {
			$this->Rel = $val;
			return $this;
		}
		/**
		 * @param \String $val
		 */
		public function setHref (  $val ) {
			$this->Href = $val;
			return $this;
		}
		/**
		 * @param \String $val
		 */
		public function setType (  $val ) {
			$this->Type = $val;
			return $this;
		}
		/**
		 * @param \String $val
		 */
		public function setMethod (  $val ) {
			$this->Method = $val;
			return $this;
		}
		/**
		 * @return \String
		 */
		public function getRel() {
			return $this->Rel;
		}
		/**
		 * @return \String
		 */
		public function getHref() {
			return $this->Href;
		}
		/**
		 * @return \String
		 */
		public function getType() {
			return $this->Type;
		}
		/**
		 * @return \String
		 */
		public function getMethod() {
			return $this->Method;
		}
		
		public function validateType( \com\servandserv\happymeal\ValidationHandler $handler ) {
			$validator = \com\servandserv\happymeal\Bindings::create('com\servandserv\XML\Atom\LinkValidator',array($this,$handler));
			$validator->validate();
		}
			
	}
		

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/XML/Atom/Link/MethodType.php
<?php

	namespace com\servandserv\XML\Atom\Link;
		
	class MethodType {
			
		const _GET = "GET";
		const _POST = "POST";
	}
		

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/XML/Atom/Link/TypeType.php
<?php

	namespace com\servandserv\XML\Atom\Link;
		
	class TypeType {
			
		const _text/html = "text/html";
	}
		

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/Example/Model.php
<?php
	namespace com\servandserv\Example;
		
	class Model extends \com\servandserv\happymeal\XML\Schema\AnyComplexType {
			
		const NS = "urn:com:servandserv:Example:Model";
		const ROOT = "Model";
		const PREF = NULL;
		/**
		 * @maxOccurs 1 
		 * @minOccurs 1 
		 * @var \String
		 */
		protected $Product = null;
		/**
		 * @maxOccurs 1 
		 * @minOccurs 1 
		 * @var com\servandserv\Example\Model\Price
		 */
		protected $Price = null;
		/**
		 * @maxOccurs 1 
		 * @minOccurs 1 
		 * @var \String
		 */
		protected $Str = null;
		/**
		 * @maxOccurs 1 
		 * @minOccurs 1 
		 * @var \Byte
		 */
		protected $Byte = null;
		/**
		 * @maxOccurs unbounded 
		 * @minOccurs 0 
		 * @var Array of com\servandserv\XML\Atom\Link
		 */
		protected $Link = [];
		/**
		 * @maxOccurs 1 
		 * @minOccurs 1 
		 * @var \String
		 */
		protected $ID = null;
		public function __construct() {
			parent::__construct();
			$this->__props["c51ce410c124a10e0db5e4b97fc2af39"] = array(
			    "attribute"=>false,
			    "nodeName"=>"product",
			    "class"=>"",
			    "classNS"=>"com\servandserv\Example\Model",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\String",
				"prop"=>"Product",
				"getter"=>"getProduct",
				"setter"=>"setProduct",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:Example:Model",
				"array"=>"",
				"minOccurs"=>1
			);
			$this->__props["aab3238922bcc25a6f606eb525ffdc56"] = array(
			    "attribute"=>false,
			    "nodeName"=>"Price",
			    "class"=>"com\servandserv\Example\Model\Price",
			    "classNS"=>"com\servandserv\Example\Model",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\AnyComplexType",
				"prop"=>"Price",
				"getter"=>"getPrice",
				"setter"=>"setPrice",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:Example:Model",
				"array"=>"",
				"minOccurs"=>1
			);
			$this->__props["9bf31c7ff062936a96d3c8bd1f8f2ff3"] = array(
			    "attribute"=>false,
			    "nodeName"=>"str",
			    "class"=>"",
			    "classNS"=>"com\servandserv\Example\Model",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\String",
				"prop"=>"Str",
				"getter"=>"getStr",
				"setter"=>"setStr",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:Example:Model",
				"array"=>"",
				"minOccurs"=>1
			);
			$this->__props["c74d97b01eae257e44aa9d5bade97baf"] = array(
			    "attribute"=>false,
			    "nodeName"=>"byte",
			    "class"=>"",
			    "classNS"=>"com\servandserv\Example\Model",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\Byte",
				"prop"=>"Byte",
				"getter"=>"getByte",
				"setter"=>"setByte",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:Example:Model",
				"array"=>"",
				"minOccurs"=>1
			);
			$this->__props["70efdf2ec9b086079795c442636b55fb"] = array(
			    "attribute"=>false,
			    "nodeName"=>"Link",
			    "class"=>"com\servandserv\XML\Atom\Link",
			    "classNS"=>"com\servandserv\XML\Atom",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\AnyComplexType",
				"prop"=>"Link",
				"getter"=>"getLink",
				"setter"=>"setLink",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:XML:Atom:Link",
				"array"=>"true",
				"minOccurs"=>0
			);
			$this->__props["6f4922f45568161a8cdf4ad2299f6d23"] = array(
			    "attribute"=>true,
			    "nodeName"=>"ID",
			    "class"=>"",
			    "classNS"=>"com\servandserv\Example\Model",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\String",
				"prop"=>"ID",
				"getter"=>"getID",
				"setter"=>"setID",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:Example:Model",
				"array"=>"",
				"minOccurs"=>1
			);
		}
		/**
		 * @param \String $val
		 */
		public function setProduct (  $val ) {
			$this->Product = $val;
			return $this;
		}
		/**
		 * @param com\servandserv\Example\Model\Price $val
		 */
		public function setPrice ( \com\servandserv\Example\Model\Price $val ) {
			$this->Price = $val;
			return $this;
		}
		/**
		 * @param \String $val
		 */
		public function setStr (  $val ) {
			$this->Str = $val;
			return $this;
		}
		/**
		 * @param \Byte $val
		 */
		public function setByte (  $val ) {
			$this->Byte = $val;
			return $this;
		}
		/**
		 * @param com\servandserv\XML\Atom\Link $val
		 */
		public function setLink ( \com\servandserv\XML\Atom\Link $val ) {
			$this->Link[] = $val;
			return $this;
		}
		/**
		 * @param com\servandserv\XML\Atom\Link[]
		 */
		public function setLinkArray ( array $vals ) {
			$this->Link = $vals;
			//$this->_properties["Link"]["text"] = $vals;
			return $this;
		}
		/**
		 * @param \String $val
		 */
		public function setID (  $val ) {
			$this->ID = $val;
			return $this;
		}
		/**
		 * @return \String
		 */
		public function getProduct() {
			return $this->Product;
		}
		/**
		 * @return com\servandserv\Example\Model\Price
		 */
		public function getPrice() {
			return $this->Price;
		}
		/**
		 * @return \String
		 */
		public function getStr() {
			return $this->Str;
		}
		/**
		 * @return \Byte
		 */
		public function getByte() {
			return $this->Byte;
		}
		/**
		 * @return com\servandserv\XML\Atom\Link | []
		 */
		public function getLink($index = NULL, callable $cb = NULL) {
			if( $index !== NULL ) {
				$res = isset($this->Link[$index]) ? $this->Link[$index] : NULL;
			} elseif( $cb ) {
			    return array_values(array_filter($this->Link, $cb));
			} else {
				$res = $this->Link;
			}
			return $res;
		}
		/**
		 * @return \String
		 */
		public function getID() {
			return $this->ID;
		}
		
		public function validateType( \com\servandserv\happymeal\ValidationHandler $handler ) {
			$validator = \com\servandserv\happymeal\Bindings::create('com\servandserv\Example\ModelValidator',array($this,$handler));
			$validator->validate();
		}
			
	}
		

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/Example/Model/Price.php
<?php
	namespace com\servandserv\Example\Model;
		
	class Price extends \com\servandserv\Example\Model\PriceType {
			
		const NS = "urn:com:servandserv:Example:Model";
		const ROOT = "Price";
		const PREF = NULL;
		public function __construct() {
			parent::__construct();
		}
		
		public function validateType( \com\servandserv\happymeal\ValidationHandler $handler ) {
			$validator = \com\servandserv\happymeal\Bindings::create('com\servandserv\Example\Model\PriceValidator',array($this,$handler));
			$validator->validate();
		}
			
	}
		

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/Example/Model/PriceType.php
<?php
	namespace com\servandserv\Example\Model;
		
	class PriceType extends \com\servandserv\happymeal\XML\Schema\AnyComplexType {
			
		const NS = "urn:com:servandserv:Example:Model";
		const ROOT = "priceType";
		const PREF = NULL;
		/**
		 * @maxOccurs 1 
		 * @minOccurs 1 
		 * @var \Decimal
		 */
		protected $Value = null;
		/**
		 * @maxOccurs 1 
		 * @minOccurs 1 
		 * @var \String
		 */
		protected $Units = null;
		/**
		 * @maxOccurs unbounded 
		 * @minOccurs 0 
		 * @var Array of com\servandserv\XML\Atom\Link
		 */
		protected $Link = [];
		public function __construct() {
			parent::__construct();
			$this->__props["98f13708210194c475687be6106a3b84"] = array(
			    "attribute"=>false,
			    "nodeName"=>"value",
			    "class"=>"",
			    "classNS"=>"com\servandserv\Example\Model\PriceType",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\Decimal",
				"prop"=>"Value",
				"getter"=>"getValue",
				"setter"=>"setValue",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:Example:Model",
				"array"=>"",
				"minOccurs"=>1
			);
			$this->__props["3c59dc048e8850243be8079a5c74d079"] = array(
			    "attribute"=>false,
			    "nodeName"=>"units",
			    "class"=>"",
			    "classNS"=>"com\servandserv\Example\Model\PriceType",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\String",
				"prop"=>"Units",
				"getter"=>"getUnits",
				"setter"=>"setUnits",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:Example:Model",
				"array"=>"",
				"minOccurs"=>1
			);
			$this->__props["b6d767d2f8ed5d21a44b0e5886680cb9"] = array(
			    "attribute"=>false,
			    "nodeName"=>"Link",
			    "class"=>"com\servandserv\XML\Atom\Link",
			    "classNS"=>"com\servandserv\XML\Atom",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\AnyComplexType",
				"prop"=>"Link",
				"getter"=>"getLink",
				"setter"=>"setLink",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:XML:Atom:Link",
				"array"=>"true",
				"minOccurs"=>0
			);
		}
		/**
		 * @param \Decimal $val
		 */
		public function setValue (  $val ) {
			$this->Value = $val;
			return $this;
		}
		/**
		 * @param \String $val
		 */
		public function setUnits (  $val ) {
			$this->Units = $val;
			return $this;
		}
		/**
		 * @param com\servandserv\XML\Atom\Link $val
		 */
		public function setLink ( \com\servandserv\XML\Atom\Link $val ) {
			$this->Link[] = $val;
			return $this;
		}
		/**
		 * @param com\servandserv\XML\Atom\Link[]
		 */
		public function setLinkArray ( array $vals ) {
			$this->Link = $vals;
			//$this->_properties["Link"]["text"] = $vals;
			return $this;
		}
		/**
		 * @return \Decimal
		 */
		public function getValue() {
			return $this->Value;
		}
		/**
		 * @return \String
		 */
		public function getUnits() {
			return $this->Units;
		}
		/**
		 * @return com\servandserv\XML\Atom\Link | []
		 */
		public function getLink($index = NULL, callable $cb = NULL) {
			if( $index !== NULL ) {
				$res = isset($this->Link[$index]) ? $this->Link[$index] : NULL;
			} elseif( $cb ) {
			    return array_values(array_filter($this->Link, $cb));
			} else {
				$res = $this->Link;
			}
			return $res;
		}
		
		public function validateType( \com\servandserv\happymeal\ValidationHandler $handler ) {
			$validator = \com\servandserv\happymeal\Bindings::create('com\servandserv\Example\Model\PriceTypeValidator',array($this,$handler));
			$validator->validate();
		}
			
	}
		

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/Example/Model/UnitsType.php
<?php

	namespace com\servandserv\Example\Model;
		
	class UnitsType {
			
		const _USD = "USD";
		const _EUR = "EUR";
		const _GBP = "GBP";
		const _RUB = "RUB";
	}
		

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/XML/Atom/LinkValidator.php
<?php

	namespace com\servandserv\XML\Atom;
	
	/**
	 *
	 * Валидатор класса com\servandserv\XML\Atom\Link
	 *
	 */
	class LinkValidator extends \com\servandserv\happymeal\XML\Schema\AnyComplexTypeValidator {
		public function __construct( \com\servandserv\XML\Atom\Link $tdo = NULL, \com\servandserv\happymeal\ValidationHandler $handler = NULL ) {
			
			parent::__construct( $tdo, $handler);
			    
			$this->__props["c4ca4238a0b923820dcc509a6f75849b"] = array(
			    "attribute"=>false,
			    "nodeName"=>"rel",
			    "class"=>"",
			    "classNS"=>"com\servandserv\XML\Atom\Link",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\String",
			    "validator"=>"com\servandserv\XML\Atom\Link\RelValidator",
				"prop"=>"Rel",
				"getter"=>"getRel",
				"setter"=>"setRel",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:XML:Atom:Link",
				"array"=>"",
				"minOccurs"=>"1",
				"maxOccurs"=>"1"
			);
			    
			$this->__props["c81e728d9d4c2f636f067f89cc14862c"] = array(
			    "attribute"=>false,
			    "nodeName"=>"href",
			    "class"=>"",
			    "classNS"=>"com\servandserv\XML\Atom\Link",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\String",
			    "validator"=>"com\servandserv\XML\Atom\Link\HrefValidator",
				"prop"=>"Href",
				"getter"=>"getHref",
				"setter"=>"setHref",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:XML:Atom:Link",
				"array"=>"",
				"minOccurs"=>"1",
				"maxOccurs"=>"1"
			);
			    
			$this->__props["eccbc87e4b5ce2fe28308fd9f2a7baf3"] = array(
			    "attribute"=>false,
			    "nodeName"=>"type",
			    "class"=>"",
			    "classNS"=>"com\servandserv\XML\Atom\Link",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\String",
			    "validator"=>"com\servandserv\XML\Atom\Link\TypeValidator",
				"prop"=>"Type",
				"getter"=>"getType",
				"setter"=>"setType",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:XML:Atom:Link",
				"array"=>"",
				"minOccurs"=>"0",
				"maxOccurs"=>"1"
			);
			    
			$this->__props["a87ff679a2f3e71d9181a67b7542122c"] = array(
			    "attribute"=>false,
			    "nodeName"=>"method",
			    "class"=>"",
			    "classNS"=>"com\servandserv\XML\Atom\Link",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\String",
			    "validator"=>"com\servandserv\XML\Atom\Link\MethodValidator",
				"prop"=>"Method",
				"getter"=>"getMethod",
				"setter"=>"setMethod",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:XML:Atom:Link",
				"array"=>"",
				"minOccurs"=>"0",
				"maxOccurs"=>"1"
			);
			$this->className = "Link";
			$this->targetNS = "urn:com:servandserv:XML:Atom:Link";
		}
		public function validate() {
			parent::validate();
			$this->assertMinOccurs( 'Rel','1' );
			$this->assertMaxOccurs( 'Rel','1' );
			$this->assertMinOccurs( 'Href','1' );
			$this->assertMaxOccurs( 'Href','1' );
			$this->assertMinOccurs( 'Type','0' );
			$this->assertMaxOccurs( 'Type','1' );
			$this->assertMinOccurs( 'Method','0' );
			$this->assertMaxOccurs( 'Method','1' );
		}
	}
	

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/XML/Atom/Link/RelValidator.php
<?php

	namespace com\servandserv\XML\Atom\Link;
	
	/**
	 *
	 * Валидатор класса com\servandserv\XML\Atom\Link\Rel
	 *
	 */
	class RelValidator extends \com\servandserv\happymeal\XML\Schema\StringValidator {
		public function __construct( \com\servandserv\happymeal\XML\Schema\String $tdo = NULL, \com\servandserv\happymeal\ValidationHandler $handler = NULL ) {
			
			parent::__construct( $tdo, $handler);
			$this->className = "Rel";
			$this->targetNS = "urn:com:servandserv:XML:Atom:Link";
		}
		public function validate() {
			parent::validate();
		}
	}
	

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/XML/Atom/Link/HrefValidator.php
<?php

	namespace com\servandserv\XML\Atom\Link;
	
	/**
	 *
	 * Валидатор класса com\servandserv\XML\Atom\Link\Href
	 *
	 */
	class HrefValidator extends \com\servandserv\happymeal\XML\Schema\StringValidator {
		public function __construct( \com\servandserv\happymeal\XML\Schema\String $tdo = NULL, \com\servandserv\happymeal\ValidationHandler $handler = NULL ) {
			
			parent::__construct( $tdo, $handler);
			$this->className = "Href";
			$this->targetNS = "urn:com:servandserv:XML:Atom:Link";
		}
		public function validate() {
			parent::validate();
		}
	}
	

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/XML/Atom/Link/TypeValidator.php
<?php

	namespace com\servandserv\XML\Atom\Link;
	
	/**
	 *
	 * Валидатор класса com\servandserv\XML\Atom\Link\Type
	 *
	 */
	class TypeValidator extends \com\servandserv\XML\Atom\Link\TypeTypeValidator {
		public function __construct( \com\servandserv\happymeal\XML\Schema\String $tdo = NULL, \com\servandserv\happymeal\ValidationHandler $handler = NULL ) {
			
			parent::__construct( $tdo, $handler);
			$this->className = "Type";
			$this->targetNS = "urn:com:servandserv:XML:Atom:Link";
		}
		public function validate() {
			parent::validate();
		}
	}
	

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/XML/Atom/Link/MethodValidator.php
<?php

	namespace com\servandserv\XML\Atom\Link;
	
	/**
	 *
	 * Валидатор класса com\servandserv\XML\Atom\Link\Method
	 *
	 */
	class MethodValidator extends \com\servandserv\XML\Atom\Link\MethodTypeValidator {
		public function __construct( \com\servandserv\happymeal\XML\Schema\String $tdo = NULL, \com\servandserv\happymeal\ValidationHandler $handler = NULL ) {
			
			parent::__construct( $tdo, $handler);
			$this->className = "Method";
			$this->targetNS = "urn:com:servandserv:XML:Atom:Link";
		}
		public function validate() {
			parent::validate();
		}
	}
	

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/XML/Atom/Link/MethodTypeValidator.php
<?php

	namespace com\servandserv\XML\Atom\Link;
	
	/**
	 *
	 * Валидатор класса com\servandserv\XML\Atom\Link\MethodType
	 *
	 */
	class MethodTypeValidator extends \com\servandserv\happymeal\XML\Schema\StringValidator {
		public function __construct( \com\servandserv\happymeal\XML\Schema\String $tdo = NULL, \com\servandserv\happymeal\ValidationHandler $handler = NULL ) {
			
			parent::__construct( $tdo, $handler);
			$this->className = "MethodType";
			$this->targetNS = "urn:com:servandserv:XML:Atom:Link";
		}
		public function validate() {
			parent::validate();
			$enum = array( 'GET', 'POST' );
			$this->assertEnumeration( $this->tdo->_text() , $enum );
		}
	}
	

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/XML/Atom/Link/TypeTypeValidator.php
<?php

	namespace com\servandserv\XML\Atom\Link;
	
	/**
	 *
	 * Валидатор класса com\servandserv\XML\Atom\Link\TypeType
	 *
	 */
	class TypeTypeValidator extends \com\servandserv\happymeal\XML\Schema\StringValidator {
		public function __construct( \com\servandserv\happymeal\XML\Schema\String $tdo = NULL, \com\servandserv\happymeal\ValidationHandler $handler = NULL ) {
			
			parent::__construct( $tdo, $handler);
			$this->className = "TypeType";
			$this->targetNS = "urn:com:servandserv:XML:Atom:Link";
		}
		public function validate() {
			parent::validate();
			$enum = array( 'text/html' );
			$this->assertEnumeration( $this->tdo->_text() , $enum );
		}
	}
	

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/Example/ModelValidator.php
<?php

	namespace com\servandserv\Example;
	
	/**
	 *
	 * Валидатор класса com\servandserv\Example\Model
	 *
	 */
	class ModelValidator extends \com\servandserv\happymeal\XML\Schema\AnyComplexTypeValidator {
		public function __construct( \com\servandserv\Example\Model $tdo = NULL, \com\servandserv\happymeal\ValidationHandler $handler = NULL ) {
			
			parent::__construct( $tdo, $handler);
			    
			$this->__props["c51ce410c124a10e0db5e4b97fc2af39"] = array(
			    "attribute"=>false,
			    "nodeName"=>"product",
			    "class"=>"",
			    "classNS"=>"com\servandserv\Example\Model",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\String",
			    "validator"=>"com\servandserv\Example\Model\ProductValidator",
				"prop"=>"Product",
				"getter"=>"getProduct",
				"setter"=>"setProduct",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:Example:Model",
				"array"=>"",
				"minOccurs"=>"1",
				"maxOccurs"=>"1"
			);
			    
			$this->__props["aab3238922bcc25a6f606eb525ffdc56"] = array(
			    "attribute"=>false,
			    "nodeName"=>"Price",
			    "class"=>"com\servandserv\Example\Model\Price",
			    "classNS"=>"com\servandserv\Example\Model",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\AnyComplexType",
			    "validator"=>"com\servandserv\Example\Model\PriceValidator",
				"prop"=>"Price",
				"getter"=>"getPrice",
				"setter"=>"setPrice",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:Example:Model",
				"array"=>"",
				"minOccurs"=>"1",
				"maxOccurs"=>"1"
			);
			    
			$this->__props["9bf31c7ff062936a96d3c8bd1f8f2ff3"] = array(
			    "attribute"=>false,
			    "nodeName"=>"str",
			    "class"=>"",
			    "classNS"=>"com\servandserv\Example\Model",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\String",
			    "validator"=>"com\servandserv\Example\Model\StrValidator",
				"prop"=>"Str",
				"getter"=>"getStr",
				"setter"=>"setStr",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:Example:Model",
				"array"=>"",
				"minOccurs"=>"1",
				"maxOccurs"=>"1"
			);
			    
			$this->__props["c74d97b01eae257e44aa9d5bade97baf"] = array(
			    "attribute"=>false,
			    "nodeName"=>"byte",
			    "class"=>"",
			    "classNS"=>"com\servandserv\Example\Model",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\Byte",
			    "validator"=>"com\servandserv\Example\Model\ByteValidator",
				"prop"=>"Byte",
				"getter"=>"getByte",
				"setter"=>"setByte",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:Example:Model",
				"array"=>"",
				"minOccurs"=>"1",
				"maxOccurs"=>"1"
			);
			    
			$this->__props["70efdf2ec9b086079795c442636b55fb"] = array(
			    "attribute"=>false,
			    "nodeName"=>"Link",
			    "class"=>"com\servandserv\XML\Atom\Link",
			    "classNS"=>"com\servandserv\XML\Atom",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\AnyComplexType",
			    "validator"=>"com\servandserv\XML\Atom\LinkValidator",
				"prop"=>"Link",
				"getter"=>"getLink",
				"setter"=>"setLink",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:XML:Atom:Link",
				"array"=>"true",
				"minOccurs"=>"0",
				"maxOccurs"=>"unbounded"
			);
			    
			$this->__props["6f4922f45568161a8cdf4ad2299f6d23"] = array(
			    "attribute"=>true,
			    "nodeName"=>"ID",
			    "class"=>"",
			    "classNS"=>"com\servandserv\Example\Model",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\String",
			    "validator"=>"com\servandserv\Example\Model\IDValidator",
				"prop"=>"ID",
				"getter"=>"getID",
				"setter"=>"setID",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:Example:Model",
				"array"=>"",
				"minOccurs"=>"1",
				"maxOccurs"=>"1"
			);
			$this->className = "Model";
			$this->targetNS = "urn:com:servandserv:Example:Model";
		}
		public function validate() {
			parent::validate();
			$this->assertMinOccurs( 'Product','1' );
			$this->assertMaxOccurs( 'Product','1' );
			$this->assertMinOccurs( 'Price','1' );
			$this->assertMaxOccurs( 'Price','1' );
			$this->assertMinOccurs( 'Str','1' );
			$this->assertMaxOccurs( 'Str','1' );
			$this->assertMinOccurs( 'Byte','1' );
			$this->assertMaxOccurs( 'Byte','1' );
			$this->assertMinOccurs( 'Link','0' );
			$this->assertMaxOccurs( 'Link','unbounded' );
			$this->assertMinOccurs( 'ID','1' );
			$this->assertMaxOccurs( 'ID','1' );
		}
	}
	

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/Example/Model/ProductValidator.php
<?php

	namespace com\servandserv\Example\Model;
	
	/**
	 *
	 * Валидатор класса com\servandserv\Example\Model\Product
	 *
	 */
	class ProductValidator extends \com\servandserv\Example\Model\ProductTypeValidator {
		public function __construct( \com\servandserv\happymeal\XML\Schema\String $tdo = NULL, \com\servandserv\happymeal\ValidationHandler $handler = NULL ) {
			
			parent::__construct( $tdo, $handler);
			$this->className = "Product";
			$this->targetNS = "urn:com:servandserv:Example:Model";
		}
		public function validate() {
			parent::validate();
		}
	}
	

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/Example/Model/PriceValidator.php
<?php

	namespace com\servandserv\Example\Model;
	
	/**
	 *
	 * Валидатор класса com\servandserv\Example\Model\Price
	 *
	 */
	class PriceValidator extends \com\servandserv\Example\Model\PriceTypeValidator {
		public function __construct( \com\servandserv\Example\Model\Price $tdo = NULL, \com\servandserv\happymeal\ValidationHandler $handler = NULL ) {
			
			parent::__construct( $tdo, $handler);
			$this->className = "Price";
			$this->targetNS = "urn:com:servandserv:Example:Model";
		}
		public function validate() {
			parent::validate();
		}
	}
	

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/Example/Model/StrValidator.php
<?php

	namespace com\servandserv\Example\Model;
	
	/**
	 *
	 * Валидатор класса com\servandserv\Example\Model\Str
	 *
	 */
	class StrValidator extends \com\servandserv\happymeal\XML\Schema\StringValidator {
		public function __construct( \com\servandserv\happymeal\XML\Schema\String $tdo = NULL, \com\servandserv\happymeal\ValidationHandler $handler = NULL ) {
			
			parent::__construct( $tdo, $handler);
			$this->className = "Str";
			$this->targetNS = "urn:com:servandserv:Example:Model";
		}
		public function validate() {
			parent::validate();
		}
	}
	

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/Example/Model/ByteValidator.php
<?php

	namespace com\servandserv\Example\Model;
	
	/**
	 *
	 * Валидатор класса com\servandserv\Example\Model\Byte
	 *
	 */
	class ByteValidator extends \com\servandserv\happymeal\XML\Schema\ByteValidator {
		public function __construct( \com\servandserv\happymeal\XML\Schema\Byte $tdo = NULL, \com\servandserv\happymeal\ValidationHandler $handler = NULL ) {
			
			parent::__construct( $tdo, $handler);
			$this->className = "Byte";
			$this->targetNS = "urn:com:servandserv:Example:Model";
		}
		public function validate() {
			parent::validate();
		}
	}
	

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/Example/Model/IDValidator.php
<?php

	namespace com\servandserv\Example\Model;
	
	/**
	 *
	 * Валидатор класса com\servandserv\Example\Model\ID
	 *
	 */
	class IDValidator extends \com\servandserv\happymeal\XML\Schema\StringValidator {
		public function __construct( \com\servandserv\happymeal\XML\Schema\String $tdo = NULL, \com\servandserv\happymeal\ValidationHandler $handler = NULL ) {
			
			parent::__construct( $tdo, $handler);
			$this->className = "ID";
			$this->targetNS = "urn:com:servandserv:Example:Model";
		}
		public function validate() {
			parent::validate();
		}
	}
	

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/Example/Model/PriceTypeValidator.php
<?php

	namespace com\servandserv\Example\Model;
	
	/**
	 *
	 * Валидатор класса com\servandserv\Example\Model\PriceType
	 *
	 */
	class PriceTypeValidator extends \com\servandserv\happymeal\XML\Schema\AnyComplexTypeValidator {
		public function __construct( \com\servandserv\Example\Model\PriceType $tdo = NULL, \com\servandserv\happymeal\ValidationHandler $handler = NULL ) {
			
			parent::__construct( $tdo, $handler);
			    
			$this->__props["98f13708210194c475687be6106a3b84"] = array(
			    "attribute"=>false,
			    "nodeName"=>"value",
			    "class"=>"",
			    "classNS"=>"com\servandserv\Example\Model\PriceType",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\Decimal",
			    "validator"=>"com\servandserv\Example\Model\PriceType\ValueValidator",
				"prop"=>"Value",
				"getter"=>"getValue",
				"setter"=>"setValue",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:Example:Model",
				"array"=>"",
				"minOccurs"=>"1",
				"maxOccurs"=>"1"
			);
			    
			$this->__props["3c59dc048e8850243be8079a5c74d079"] = array(
			    "attribute"=>false,
			    "nodeName"=>"units",
			    "class"=>"",
			    "classNS"=>"com\servandserv\Example\Model\PriceType",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\String",
			    "validator"=>"com\servandserv\Example\Model\PriceType\UnitsValidator",
				"prop"=>"Units",
				"getter"=>"getUnits",
				"setter"=>"setUnits",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:Example:Model",
				"array"=>"",
				"minOccurs"=>"1",
				"maxOccurs"=>"1"
			);
			    
			$this->__props["b6d767d2f8ed5d21a44b0e5886680cb9"] = array(
			    "attribute"=>false,
			    "nodeName"=>"Link",
			    "class"=>"com\servandserv\XML\Atom\Link",
			    "classNS"=>"com\servandserv\XML\Atom",
			    "prototype"=>"com\servandserv\happymeal\XML\Schema\AnyComplexType",
			    "validator"=>"com\servandserv\XML\Atom\LinkValidator",
				"prop"=>"Link",
				"getter"=>"getLink",
				"setter"=>"setLink",
				"default"=>"",
				"fixed"=>"",
				"xmlns"=>"urn:com:servandserv:XML:Atom:Link",
				"array"=>"true",
				"minOccurs"=>"0",
				"maxOccurs"=>"unbounded"
			);
			$this->className = "PriceType";
			$this->targetNS = "urn:com:servandserv:Example:Model";
		}
		public function validate() {
			parent::validate();
			$this->assertMinOccurs( 'Value','1' );
			$this->assertMaxOccurs( 'Value','1' );
			$this->assertMinOccurs( 'Units','1' );
			$this->assertMaxOccurs( 'Units','1' );
			$this->assertMinOccurs( 'Link','0' );
			$this->assertMaxOccurs( 'Link','unbounded' );
		}
	}
	

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/Example/Model/PriceType/ValueValidator.php
<?php

	namespace com\servandserv\Example\Model\PriceType;
	
	/**
	 *
	 * Валидатор класса com\servandserv\Example\Model\PriceType\Value
	 *
	 */
	class ValueValidator extends \com\servandserv\happymeal\XML\Schema\DecimalValidator {
		public function __construct( \com\servandserv\happymeal\XML\Schema\Decimal $tdo = NULL, \com\servandserv\happymeal\ValidationHandler $handler = NULL ) {
			
			parent::__construct( $tdo, $handler);
			$this->className = "Value";
			$this->targetNS = "urn:com:servandserv:Example:Model";
		}
		public function validate() {
			parent::validate();
		}
	}
	

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/Example/Model/PriceType/UnitsValidator.php
<?php

	namespace com\servandserv\Example\Model\PriceType;
	
	/**
	 *
	 * Валидатор класса com\servandserv\Example\Model\PriceType\Units
	 *
	 */
	class UnitsValidator extends \com\servandserv\Example\Model\UnitsTypeValidator {
		public function __construct( \com\servandserv\happymeal\XML\Schema\String $tdo = NULL, \com\servandserv\happymeal\ValidationHandler $handler = NULL ) {
			
			parent::__construct( $tdo, $handler);
			$this->className = "Units";
			$this->targetNS = "urn:com:servandserv:Example:Model";
		}
		public function validate() {
			parent::validate();
		}
	}
	

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/Example/Model/UnitsTypeValidator.php
<?php

	namespace com\servandserv\Example\Model;
	
	/**
	 *
	 * Валидатор класса com\servandserv\Example\Model\UnitsType
	 *
	 */
	class UnitsTypeValidator extends \com\servandserv\happymeal\XML\Schema\StringValidator {
		public function __construct( \com\servandserv\happymeal\XML\Schema\String $tdo = NULL, \com\servandserv\happymeal\ValidationHandler $handler = NULL ) {
			
			parent::__construct( $tdo, $handler);
			$this->className = "UnitsType";
			$this->targetNS = "urn:com:servandserv:Example:Model";
		}
		public function validate() {
			parent::validate();
			$enum = array( 'USD', 'EUR', 'GBP', 'RUB' );
			$this->assertEnumeration( $this->tdo->_text() , $enum );
		}
	}
	

#path: /var/www/localhost/htdocs/vendor/happymeal/example/classes.codegen/com/servandserv/Example/Model/ProductTypeValidator.php
<?php

	namespace com\servandserv\Example\Model;
	
	/**
	 *
	 * Валидатор класса com\servandserv\Example\Model\ProductType
	 *
	 */
	class ProductTypeValidator extends \com\servandserv\happymeal\XML\Schema\StringValidator {
		const PATTERN1 = "/^[a-zA-Z]{1,5}$/u";
		public function __construct( \com\servandserv\happymeal\XML\Schema\String $tdo = NULL, \com\servandserv\happymeal\ValidationHandler $handler = NULL ) {
			
			parent::__construct( $tdo, $handler);
			$this->className = "ProductType";
			$this->targetNS = "urn:com:servandserv:Example:Model";
		}
		public function validate() {
			parent::validate();
			$this->assertPattern( $this->tdo->_text(), $this::PATTERN1 );
		}
	}
	